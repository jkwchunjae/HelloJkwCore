@inherits JkwPageBase
@using MudBlazor

@if (AssistSets == null)
{
    <span>한바퀴 돌면 힌트를 보여줍니다</span>
}
else if (Sets != null)
{
    var count = AssistSets?.Count() ?? 0;
<span>
    현재 @count
</span>
<MudTable Items="@Sets.Take(1000)" Dense="true">
    <HeaderContent>
        @foreach (var cubeName in CubeNames)
        {
            <MudTh>@cubeName</MudTh>
        }
        @foreach (var scale in State.Scales)
        {
            var leftName = $"L{scale.Id}";
            var rightName = $"R{scale.Id}";
            <MudTh>@leftName</MudTh>
            <MudTh>@rightName</MudTh>
        }
        <MudTh>
            <MudTextField T="string" Value="calcFormula" ValueChanged="FormulaChagned" Immediate="true" Placeholder="aab < c" Margin="Margin.Dense"/>
            @if (calcResult.Any() && calcResult.First().Value is Boolean)
            {
                var trueCount = calcResult.Count(r => r.Value is Boolean b && b == true);
                var falseCount = calcResult.Count(r => r.Value is Boolean b && b == false);
                var trueRatio = (int)(trueCount / (double)calcResult.Count * 100);
                var falseRatio = (int)(falseCount / (double)calcResult.Count * 100);
                <span>True: @trueRatio</span>
                <span> / </span>
                <span>False: @falseRatio</span>
            }
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        @foreach (var cubeName in CubeNames)
        {
            var value = context[cubeName];
            <MudTd>@value</MudTd>
        }
        @foreach (var scale in State.Scales)
        {
            var leftName = $"L{scale.Id}";
            var rightName = $"R{scale.Id}";
            var leftValue = scale.Left.Cubes.Sum(c => context[c.Name]);
            var rightValue = scale.Right.Cubes.Sum(c => context[c.Name]);
            <MudTd>@leftValue</MudTd>
            <MudTd>@rightValue</MudTd>
        }
        @if (calcResult.ContainsKey(context))
        {
            var result = calcResult[context];
            if (result is Boolean rBool && rBool == true)
            {
                <MudTd style="background-color: #3dc03d; color: white;">
                    @result
                </MudTd>
            }
            else if (result is Boolean rBool2 && rBool2 == false)
            {
                <MudTd style="background-color: #ff5d2c; color: white;">
                    @result
                </MudTd>
            }
            else
            {
                <MudTd>
                    @result
                </MudTd>
            }
        }
        else
        {
            <MudTd></MudTd>
        }
    </RowTemplate>
</MudTable>
}
else
{
    var count = AssistSets?.Count() ?? 0;
<span>
    너무 많은 경우가 있습니다. 1000개 이하로 줄어들면 표시됩니다. 현재 @count
</span>
<div>
    <MudTextField T="string" Value="calcFormula" ValueChanged="FormulaChagned" Immediate="true" Placeholder="aab < c" Margin="Margin.Dense" />
    @if (calcResult.Any() && calcResult.First().Value is Boolean)
    {
        var trueCount = calcResult.Count(r => r.Value is Boolean b && b == true);
        var falseCount = calcResult.Count(r => r.Value is Boolean b && b == false);
        var trueRatio = (int)(trueCount / (double)calcResult.Count * 100);
        var falseRatio = (int)(falseCount / (double)calcResult.Count * 100);
        <span>True: @trueRatio</span>
        <span> / </span>
        <span>False: @falseRatio</span>
    }
</div>
}