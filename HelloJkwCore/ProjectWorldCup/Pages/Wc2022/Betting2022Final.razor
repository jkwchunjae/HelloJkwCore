@inherits JkwPageBase
@layout WcLayout
@using ProjectWorldCup.Pages.Betting
@page "/worldcup/2022/betting/final"

@code {
    string commonButtonStyle = "padding: 6px; border-radius: 6px; box-shadow: var(--mud-elevation-1); display: block; text-align: start; width: 100%; text-transform: initial;";
}

<WcTitle>3라운드: 1,2,3,4등 맞추기</WcTitle>

<WcRemainTime ClassName="final-remain-time-text"
              RemainSeconds="@((int)(WorldCupConst.Round8StartTime - DateTime.Now).TotalSeconds)"
              TimeOver="@(() => TimeOver = true)" />

@if (TimeOver && (BettingItems?.Any() ?? false))
{
    <BettingFinalResultComponent BettingItems="BettingItems" Visible="@TimeOver"></BettingFinalResultComponent>
}

<div class="desc">
    <span>8강 첫 경기가 시작하기 전에 우승팀까지 선택해야 합니다</span>

    @if (TimeOver)
    {
        <div>
            <span>선택 시간이 끝났습니다.</span>
        </div>
    }
    else
    {
        <div>
            <span class="final-remain-time-text"></span>
            <span>남았습니다</span>
        </div>
    }
</div>

@foreach (var stageData in StageMatches)
{
    string stageId = stageData.StageId;
    var matches = stageData.Matches;

    <div class="matches">
        <div class="stage-name">
            <MudText Typo="Typo.h5">@StageName[stageId]</MudText>
        </div>
        @foreach (var matchData in matches)
        {
            var matchId = matchData?.MatchId;
            var homeType = GetButtonType(stageId, matchData?.HomeTeam);
            var awayType = GetButtonType(stageId, matchData?.AwayTeam);
            var homeButtonStyle = homeType == TeamButtonType.Picked ? $"{commonButtonStyle} color: white; background: #56042C"
            : commonButtonStyle;
            var awayButtonStyle = awayType == TeamButtonType.Picked ? $"{commonButtonStyle} color: white; background: #56042C"
            : commonButtonStyle;

            <div class="match row">
                <div class="team col-md-3">
                    <MudButton Class="team-inner" Style="@homeButtonStyle" OnClick="(async () => await PickTeamAsync(stageId, matchId, matchData?.HomeTeam))" Disabled="@(homeType == TeamButtonType.Disabled)">
                        <img class="team-img" src="@matchData?.HomeTeam?.Flag" />
                        <span class="team-name">@matchData?.HomeTeam?.Name</span>
                    </MudButton>
                </div>
                <div class="team col-md-3">
                    <MudButton Class="team-inner" Style="@awayButtonStyle" OnClick="(async () => await PickTeamAsync(stageId, matchId, matchData?.AwayTeam))" Disabled="@(awayType == TeamButtonType.Disabled)">
                        <img class="team-img" src="@matchData?.AwayTeam?.Flag" />
                        <span class="team-name">@matchData?.AwayTeam?.Name</span>
                    </MudButton>
                </div>
            </div>
        }
    </div>
}
@if (!TimeOver)
{
    @if (BettingItem?.IsRandom ?? false)
    {
    }
    else if (!AllMatchesAreSetted)
    {
        <MudButton Variant="Variant.Filled" Color="Color.Error">
            랜덤 선택: 8강 진출팀이 모두 확정 된 후에 선택가능 합니다.
        </MudButton>
    }
    else
    {
        @if (CheckRandom1 == false)
        {
            <MudButton OnClick="@(() => { CheckRandom1 = true; })" Variant="Variant.Outlined" Color="Color.Error">
                랜덤 선택
            </MudButton>
        }
        else if (CheckRandom2 == false)
        {
            <MudButton OnClick="@(() => { CheckRandom2 = true; })" Variant="Variant.Outlined" Color="Color.Error">
                랜덤 선택을 하면 더 이상 수정할 수 없습니다. 각오하셨습니까?
            </MudButton>
        }
        else if (CheckRandom3 == false)
        {
            <MudButton OnClick="@(() => { CheckRandom3 = true; })" Variant="Variant.Outlined" Color="Color.Error">
                결과가 마음에 안들더라도 절대 복구해주지 않을 겁니다. 괜찮습니까?
            </MudButton>
        }
        else
        {
            <MudButton OnClick="@(() => SelectFullRandom())" Variant="Variant.Filled" Color="Color.Error">
                찐막 질문. 랜덤 선택하시겠습니까?
            </MudButton>
        }
    }
}

@if (BettingItem?.Picked?.Count(x => x != null) == 4)
{
    <div>
        @foreach (var team in BettingItem.Picked)
        {
            <img class="team-img" src="@team.Flag" />
        }
    </div>
}

@if (!TimeOver && (BettingItems?.Any() ?? false))
{
    @if (User?.HasRole(UserRole.Admin) ?? false)
    {
        <BettingFinalResultComponent BettingItems="BettingItems" Visible="true"></BettingFinalResultComponent>
    }
    else
    {
        <BettingFinalResultComponent BettingItems="BettingItems" Visible="@TimeOver"></BettingFinalResultComponent>
    }
}

