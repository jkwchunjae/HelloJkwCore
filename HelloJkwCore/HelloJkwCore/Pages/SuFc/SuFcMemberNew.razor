@inherits JkwPageBase
@page "/sufc/member/new"

@using ProjectSuFc;
@using Common;

@inject ISuFcService SuFcService;
@inject IJSRuntime JSRuntime

<h1>수FC / 신규회원</h1>

<RadzenTemplateForm TItem="Member" Data="_member"
                    Submit="@(async () => await AddNewMember(_member))">
    <RadzenFieldset Text="회원 정보 입력" Style="max-width: 700px;">
        <div class="row">
            <div class="col-3">
                <RadzenLabel Text="이름" />
            </div>
            <div class="col">
                <RadzenTextBox Name="Name" @bind-Value="_memberName" @ref="MemberNameText"/>
            </div>
        </div>
        @*<div class="row">
            <div class="col-3">
                <RadzenLabel Text="등록일" />
            </div>
            <div class="col">
                <RadzenDatePicker Name="RegisterDate" @bind-Value="_member.RegisterDate" />
            </div>
        </div>*@
        @*<div class="row">
            <div class="col-3">
                <RadzenLabel Text="생일" />
            </div>
            <div class="col">
                <RadzenDatePicker Name="Birthday" @bind-Value="_member.Birthday" />
            </div>
        </div>*@
        <RadzenButton ButtonType="ButtonType.Submit" Text="등록" />
    </RadzenFieldset>
</RadzenTemplateForm>

@code {
    private RadzenTextBox MemberNameText;
    string _memberName = string.Empty;
    Member _member = new();

    protected override async Task OnPageAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.FocusAsync(MemberNameText.Element);
        }
    }

    async Task AddNewMember(Member member)
    {
        member.Name = new MemberName(_memberName);
        var result = await SuFcService.SaveMember(member);

        if (result)
        {
            Navi.NavigateTo("/sufc/member");
        }
    }
}
