@inherits JkwPageBase
@page "/sufc/schedule/new"

@using ProjectSuFc;

@inject ISuFcService SuFcService;

<h1>수FC / 모임 등록</h1>

<RadzenTemplateForm TItem="ScheduleData" Data="Schedule"
                    Submit="@(async () => await AddNewSchedule(Schedule))">
    <RadzenFieldset Text="모임 등록" Style="max-width: 700px;">
        <div class="row">
            <div class="col-3">
                <RadzenLabel Text="제목" />
            </div>
            <div class="col" style="width: 50%;">
                <RadzenTextBox Name="Title" @bind-Value="Schedule.Title" />
            </div>
        </div>

        <div class="row">
            <div class="col-3">
                <RadzenLabel Text="날짜" />
            </div>
            <div class="col" style="width: 50%;">
                <RadzenDatePicker Name="RegisterDate" @bind-Value="Schedule.Date" DateFormat="yyyy.MM.dd" />
            </div>
        </div>

        <div class="row">
            <div class="col-3">
                <RadzenLabel Text="장소" />
            </div>
            <div class="col" style="width: 50%;">
                <RadzenTextBox Name="Location" @bind-Value="Schedule.Location" />
            </div>
        </div>

        <div class="row">
            <div class="col-3">
                <RadzenLabel Text="시간" />
            </div>
            <div class="col" style="width: 50%;">
                <RadzenTextBox Name="Time" @bind-Value="Schedule.Time" />
            </div>
        </div>

        <div class="row">
            <div class="col-3">
                <RadzenLabel Text="팀" />
            </div>
            <div class="col" style="width: 50%;">
                <RadzenDropDown TValue="TeamResult" Data="TeamResultList" @bind-Value="SelectedTeamResult"
                                TextProperty="Title"></RadzenDropDown>
            </div>
        </div>
        <RadzenButton ButtonType="ButtonType.Submit" Text="등록" />
        <RadzenButton ButtonType="ButtonType.Button" Text="연속 등록" Click="@(async () => await AddNewSchedule(Schedule, gotoBack: false))" />
    </RadzenFieldset>
</RadzenTemplateForm>

@code
{
    ScheduleData Schedule = new();
    List<TeamResult> TeamResultList = new();
    TeamResult SelectedTeamResult;

    protected override async Task OnPageInitializedAsync()
    {
        TeamResultList = await SuFcService.GetAllTeamResult();
    }

    async Task AddNewSchedule(ScheduleData scheduleData, bool gotoBack = true)
    {
        var members = await SuFcService.GetAllMember();
        scheduleData.Members = members
            .Select(member => new ScheduleMember(member.Name))
            .ToList();
        scheduleData.TeamTitle = SelectedTeamResult?.Title ?? string.Empty;

        await SuFcService.SaveSchedule(scheduleData);

        if (gotoBack)
        {
            Navi.NavigateTo("/sufc/schedule");
        }
        else
        {
            var newSchedule = new ScheduleData
            {
                Title = scheduleData.Title,
                Location = scheduleData.Location,
                Time = scheduleData.Time,
            };
            Schedule = newSchedule;
        }
    }
}
