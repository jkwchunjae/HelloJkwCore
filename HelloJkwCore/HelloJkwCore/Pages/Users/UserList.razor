@inherits JkwPageBase
@using HelloJkwCore.Components
@page "/users"

<PageTitle>유저 관리</PageTitle>

<MudTable Items="FilteredUsers" Dense="true">
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<AppUser, object>(user => user.UserName)">
                이름
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<AppUser, object>(user => user.NickName ?? string.Empty)">
                닉네임
            </MudTableSortLabel>
        </MudTh>
        @*<MudTh>이메일</MudTh>*@
        <MudTh>
            <MudTableSortLabel SortBy="new Func<AppUser, object>(user => user.CreateTime)">
                가입일
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel SortBy="new Func<AppUser, object>(user => user.LastLoginTime)">
                마지막 접속
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            권한
        </MudTh>
        <MudTh>
            관리
        </MudTh>
    </HeaderContent>
    <RowTemplate Context="user">
        <MudTd>@user.Id</MudTd>
        <MudTd>@user.UserName</MudTd>
        <MudTd>@user.NickName</MudTd>
        @*<MudTd>@user.Email</MudTd>*@
        <MudTd>
            <span class="date-time">@user.CreateTime.ToString("yyyy. M. d.")</span>
            <span class="date-time">@user.CreateTime.ToString("HH:mm:ss")</span>
        </MudTd>
        <MudTd>
            <span class="date-time">@user.LastLoginTime.ToString("yyyy. M. d.")</span>
            <span class="date-time">@user.LastLoginTime.ToString("HH:mm:ss")</span>
        </MudTd>
        <MudTd>
            <div>
            @foreach (var role in user.Roles)
            {
                bool isChecked = user.Roles?.Contains(role) ?? false;
                <MudText>@role.ToString()</MudText>
                @* <MudCheckBox T="bool" Checked="isChecked" Label="@role.ToString()"  ReadOnly="true" /> *@
                            @* CheckedChanged="(async check => await UserRoleChangedAsync(user, role, check))"/> *@
            }
            </div>

            <div>
                <MudButton Size="Size.Small" Variant="Variant.Outlined"
                    OnClick="@(async () => await ManageUserRole(user))"
                    >
                    권한 설정
                </MudButton>
            </div>
        </MudTd>
        <MudTd>
            <DoubleClickButton OnClick="@(async () => await DeleteUserAsync(user))" Size="Size.Small"
                DefaultVariant="Variant.Outlined" DefaultColor="Color.Default"
                ActionVariant="Variant.Filled" ActionColor="Color.Secondary"
                ResetDelay="TimeSpan.FromSeconds(3)"
                >
                삭제
            </DoubleClickButton>
        </MudTd>
    </RowTemplate>
</MudTable>
